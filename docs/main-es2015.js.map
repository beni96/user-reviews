{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/add-comment/add-comment.component.ts","./src/app/components/add-comment/add-comment.component.html","./src/app/components/comment/comment.component.ts","./src/app/components/comment/comment.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\nexport interface Comment {\n  avatarUrl: string;\n  name: string;\n  comment: string;\n}\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  comments: Comment[] = [];\n  isCommentInEdit = false;\n\n  ngOnInit() {\n    this.comments = JSON.parse(localStorage.getItem('comments')) || [];\n  }\n\n  onCommentAdd(event: { name: string, comment: string }) {\n    const imgGen = require('@dudadev/random-img');\n    imgGen().then(avatarUrl => {\n      const comment: Comment = { avatarUrl, name: event.name, comment: event.comment };\n      this.comments  = this.comments.concat(comment);\n      localStorage.setItem('comments', JSON.stringify(this.comments));\n    });\n  }\n\n  onCommentInEdit() {\n    this.isCommentInEdit = true;\n  }\n\n  onDelete(index: number) {\n    this.comments.splice(index, 1);\n    localStorage.setItem('comments', JSON.stringify(this.comments));\n  }\n\n  onEdit(index: number, event: { name: string, comment: string }) {\n    this.comments[index].name = event.name;\n    this.comments[index].comment = event.comment;\n    this.isCommentInEdit = false;\n    localStorage.setItem('comments', JSON.stringify(this.comments));\n  }\n}\n","<div class=\"wrapper\">\n  <span class=\"title\">User Reviews</span>\n  <app-comment\n    *ngFor=\"let comment of comments; let index=index\"\n    [avatarUrl]=\"comment.avatarUrl\"\n    [name]=\"comment.name\"\n    [comment]=\"comment.comment\"\n    (commentInEdit)=\"onCommentInEdit()\"\n    (commentEdited)=\"onEdit(index, $event)\"\n    (commentDeleted)=\"onDelete(index)\"\n  ></app-comment>\n  <app-add-comment *ngIf=\"!isCommentInEdit\" (commentAdded)=\"onCommentAdd($event)\"></app-add-comment>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { AddCommentComponent } from './components/add-comment/add-comment.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CommentComponent } from './components/comment/comment.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AddCommentComponent,\n    CommentComponent\n  ],\n  imports: [BrowserModule, ReactiveFormsModule],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-add-comment',\n  templateUrl: './add-comment.component.html',\n  styleUrls: ['./add-comment.component.scss']\n})\nexport class AddCommentComponent implements OnInit {\n  @Input() isEdit = false;\n  @Input() name: string;\n  @Input() comment: string;\n  @Output() commentAdded = new EventEmitter<{ name: string, comment: string }>();\n\n  form: FormGroup;\n  formControls: { [key: string]: FormControl };\n\n  constructor(private formbuilder: FormBuilder) {}\n\n  ngOnInit() {\n    this.generateControls();\n    this.form = this.formbuilder.group(this.formControls);\n  }\n\n  generateControls() {\n    this.formControls = {\n      name: this.formbuilder.control(this.name || '', Validators.required),\n      comment: this.formbuilder.control(this.comment || '', Validators.required),\n    };\n  }\n\n  onSubmit() {\n    this.commentAdded.emit({ name: this.formControls.name.value, comment: this.formControls.comment.value });\n    this.form.reset();\n  }\n}\n","<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n  <input formControlName=\"name\" [value]=\"formControls.name.value\" type=\"text\" placeholder=\"Your name\" />\n  <textarea formControlName=\"comment\" [value]=\"formControls.comment.value\" placeholder=\"Your comment\"></textarea>\n  <button [disabled]=\"!form.valid\">{{ isEdit ? 'Save' : 'Add' }}</button>\n</form>\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-comment',\n  templateUrl: './comment.component.html',\n  styleUrls: ['./comment.component.scss']\n})\nexport class CommentComponent {\n  @Input() avatarUrl: string;\n  @Input() name: string;\n  @Input() comment: string;\n  @Output() commentEdited = new EventEmitter<{ name: string, comment: string }>();\n  @Output() commentDeleted = new EventEmitter<void>();\n  @Output() commentInEdit = new EventEmitter<void>();\n\n  isEditClicked = false;\n\n  onEdit() {\n    this.commentInEdit.emit();\n    this.isEditClicked = true;\n  }\n\n  onDelete() {\n    this.commentDeleted.emit();\n  }\n\n  onEditSave(event: { name: string, comment: string }) {\n    this.isEditClicked = false;\n    this.commentEdited.emit({ name: event.name, comment: event.comment });\n  }\n}\n","<div *ngIf=\"!isEditClicked\" class=\"comment-wrapper\">\n  <img [src]=\"avatarUrl\" />\n  <div class=\"titles-wrapper\">\n    <span class=\"name\">{{ name }}</span>\n    <span class=\"comment\">{{ comment }}</span>\n  </div>\n\n  <div class=\"icons-wrapper\">\n    <i class=\"fa fa-pen\" aria-hidden=\"true\" (click)=\"onEdit()\"></i>\n    <i class=\"fa fa-trash\" aria-hidden=\"true\" (click)=\"onDelete()\"></i>\n  </div>\n</div>\n\n<app-add-comment\n  *ngIf=\"isEditClicked\"\n  [isEdit]=\"true\"\n  [name]=\"name\"\n  [comment]=\"comment\"\n  (commentAdded)=\"onEditSave($event)\"\n></app-add-comment>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}