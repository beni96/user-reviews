{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/add-comment/add-comment.component.ts","webpack:///src/app/components/add-comment/add-comment.component.html","webpack:///src/app/components/comment/comment.component.ts","webpack:///src/app/components/comment/comment.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","comments","isCommentInEdit","JSON","parse","localStorage","getItem","event","imgGen","avatarUrl","comment","name","concat","setItem","stringify","index","splice","selector","templateUrl","styleUrls","AppModule","declarations","imports","bootstrap","AddCommentComponent","formbuilder","isEdit","commentAdded","generateControls","form","group","formControls","control","required","emit","value","reset","onSubmit","CommentComponent","commentEdited","commentDeleted","commentInEdit","isEditClicked","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\nexport interface Comment {\n  avatarUrl: string;\n  name: string;\n  comment: string;\n}\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  comments: Comment[] = [];\n  isCommentInEdit = false;\n\n  ngOnInit() {\n    this.comments = JSON.parse(localStorage.getItem('comments')) || [];\n  }\n\n  onCommentAdd(event: { name: string, comment: string }) {\n    const imgGen = require('@dudadev/random-img');\n    imgGen().then(avatarUrl => {\n      const comment: Comment = { avatarUrl, name: event.name, comment: event.comment };\n      this.comments  = this.comments.concat(comment);\n      localStorage.setItem('comments', JSON.stringify(this.comments));\n    });\n  }\n\n  onCommentInEdit() {\n    this.isCommentInEdit = true;\n  }\n\n  onDelete(index: number) {\n    this.comments.splice(index, 1);\n    localStorage.setItem('comments', JSON.stringify(this.comments));\n  }\n\n  onEdit(index: number, event: { name: string, comment: string }) {\n    this.comments[index].name = event.name;\n    this.comments[index].comment = event.comment;\n    this.isCommentInEdit = false;\n    localStorage.setItem('comments', JSON.stringify(this.comments));\n  }\n}\n","<div class=\"wrapper\">\n  <span class=\"title\">User Reviews</span>\n  <app-comment\n    *ngFor=\"let comment of comments; let index=index\"\n    [avatarUrl]=\"comment.avatarUrl\"\n    [name]=\"comment.name\"\n    [comment]=\"comment.comment\"\n    (commentInEdit)=\"onCommentInEdit()\"\n    (commentEdited)=\"onEdit(index, $event)\"\n    (commentDeleted)=\"onDelete(index)\"\n  ></app-comment>\n  <app-add-comment *ngIf=\"!isCommentInEdit\" (commentAdded)=\"onCommentAdd($event)\"></app-add-comment>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { AddCommentComponent } from './components/add-comment/add-comment.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CommentComponent } from './components/comment/comment.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AddCommentComponent,\n    CommentComponent\n  ],\n  imports: [BrowserModule, ReactiveFormsModule],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-add-comment',\n  templateUrl: './add-comment.component.html',\n  styleUrls: ['./add-comment.component.scss']\n})\nexport class AddCommentComponent implements OnInit {\n  @Input() isEdit = false;\n  @Input() name: string;\n  @Input() comment: string;\n  @Output() commentAdded = new EventEmitter<{ name: string, comment: string }>();\n\n  form: FormGroup;\n  formControls: { [key: string]: FormControl };\n\n  constructor(private formbuilder: FormBuilder) {}\n\n  ngOnInit() {\n    this.generateControls();\n    this.form = this.formbuilder.group(this.formControls);\n  }\n\n  generateControls() {\n    this.formControls = {\n      name: this.formbuilder.control(this.name || '', Validators.required),\n      comment: this.formbuilder.control(this.comment || '', Validators.required),\n    };\n  }\n\n  onSubmit() {\n    this.commentAdded.emit({ name: this.formControls.name.value, comment: this.formControls.comment.value });\n    this.form.reset();\n  }\n}\n","<form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n  <input formControlName=\"name\" [value]=\"formControls.name.value\" type=\"text\" placeholder=\"Your name\" />\n  <textarea formControlName=\"comment\" [value]=\"formControls.comment.value\" placeholder=\"Your comment\"></textarea>\n  <button [disabled]=\"!form.valid\">{{ isEdit ? 'Save' : 'Add' }}</button>\n</form>\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-comment',\n  templateUrl: './comment.component.html',\n  styleUrls: ['./comment.component.scss']\n})\nexport class CommentComponent {\n  @Input() avatarUrl: string;\n  @Input() name: string;\n  @Input() comment: string;\n  @Output() commentEdited = new EventEmitter<{ name: string, comment: string }>();\n  @Output() commentDeleted = new EventEmitter<void>();\n  @Output() commentInEdit = new EventEmitter<void>();\n\n  isEditClicked = false;\n\n  onEdit() {\n    this.commentInEdit.emit();\n    this.isEditClicked = true;\n  }\n\n  onDelete() {\n    this.commentDeleted.emit();\n  }\n\n  onEditSave(event: { name: string, comment: string }) {\n    this.isEditClicked = false;\n    this.commentEdited.emit({ name: event.name, comment: event.comment });\n  }\n}\n","<div *ngIf=\"!isEditClicked\" class=\"comment-wrapper\">\n  <img [src]=\"avatarUrl\" />\n  <div class=\"titles-wrapper\">\n    <span class=\"name\">{{ name }}</span>\n    <span class=\"comment\">{{ comment }}</span>\n  </div>\n\n  <div class=\"icons-wrapper\">\n    <i class=\"fa fa-pen\" aria-hidden=\"true\" (click)=\"onEdit()\"></i>\n    <i class=\"fa fa-trash\" aria-hidden=\"true\" (click)=\"onDelete()\"></i>\n  </div>\n</div>\n\n<app-add-comment\n  *ngIf=\"isEditClicked\"\n  [isEdit]=\"true\"\n  [name]=\"name\"\n  [comment]=\"comment\"\n  (commentAdded)=\"onEditSave($event)\"\n></app-add-comment>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}